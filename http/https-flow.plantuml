@startuml
participant "Client" as c
participant "Server" as s
==TCP Handshake==
c<->s: //Establish TCP Connection//
==TLS Handshake (v1.2)==
c->s: **Client Hello (1)**\n Version, Random, Session ID, Ciphers Suites, Extensions (server_name)
s->c: **Server Hello (2)**\n Version, Random, Session ID, Ciphers Suite, Extensions
s->c: **Certificate (11)**\n**Server Key Exchange (12)** (For DH series cipher suites)\n**Server Hello Done (14)**
alt Client-authenticated Request
s->c: **Certificate Request (13)** \nSignature Hash Algorithms, Distinguished Names
end
c->c: Verify Server Certificate (Extract public key)
c->s: **Client Key Exchange (16)** (Depends on the selected cipher suite)\nPreMasterSecret (Encrypted using the public key of the server certificate)
alt Client-authenticated Request
c->s: **Certificate (11), Certifiacte Verify (15)**\nSignature using the client's certificate's private key\n(Can be verified by using the client's certificate's public key)
s->s: Verify signature
end
note over c, s: Compute MasterSecret by random numbers & PreMasterSecret
c->s: **Change Cipher Spec (20), Encrpted Handshake Message (22)**\n Encrypted Finished message, containing a hash and MAC
s->s: Decrypt and verify
s->c: **Change Cipher Spec (20), Encrpted Handshake Message (22)**\n Encrypted Finished message, containing a hash and MAC
c->c: Decrypt and verify
==Data Exchange==
c->s: **Application Data**
s->c: **Application Data**
==Connection termination==
c->s: **Encrypted Alert**
c<->s: //Terminate TCP Connection//
@enduml
